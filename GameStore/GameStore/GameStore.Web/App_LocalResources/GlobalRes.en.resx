<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddNewComment" xml:space="preserve">
    <value>Add new comment</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="Answer" xml:space="preserve">
    <value>Answer</value>
  </data>
  <data name="BackToGame" xml:space="preserve">
    <value>Back to game</value>
  </data>
  <data name="BackToList" xml:space="preserve">
    <value>Back to List</value>
  </data>
  <data name="Ban" xml:space="preserve">
    <value>Ban</value>
  </data>
  <data name="BanPromt" xml:space="preserve">
    <value>Are you sure you want to ban this?</value>
  </data>
  <data name="Basket" xml:space="preserve">
    <value>Basket</value>
  </data>
  <data name="Body" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="BuyGame" xml:space="preserve">
    <value>Buy game</value>
  </data>
  <data name="ByPriceAsc" xml:space="preserve">
    <value>By price (asc)</value>
  </data>
  <data name="ByPriceDesc" xml:space="preserve">
    <value>By Price (desc)</value>
  </data>
  <data name="CardNumber" xml:space="preserve">
    <value>Card number</value>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="CommentDeleted" xml:space="preserve">
    <value>Comment was deleted</value>
  </data>
  <data name="CommentDeletePromt" xml:space="preserve">
    <value>Are you sure you want to delete this comment?</value>
  </data>
  <data name="CommentName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Comments" xml:space="preserve">
    <value>Comments</value>
  </data>
  <data name="CompanyName" xml:space="preserve">
    <value>Company name</value>
  </data>
  <data name="CompanyNameValidationMessage" xml:space="preserve">
    <value>You can't type (#,?) in company name</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="CreateNewGame" xml:space="preserve">
    <value>Create new game</value>
  </data>
  <data name="CreationDate" xml:space="preserve">
    <value>Creation date</value>
  </data>
  <data name="Customer" xml:space="preserve">
    <value>Customer</value>
  </data>
  <data name="CVC" xml:space="preserve">
    <value>CVV2/CVC2</value>
  </data>
  <data name="DateFilterName" xml:space="preserve">
    <value>Filter by date</value>
  </data>
  <data name="DateFilterViewModel_All" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="DateOfExpire" xml:space="preserve">
    <value>Date of expire</value>
  </data>
  <data name="DateValidationError" xml:space="preserve">
    <value>Date field is not valid</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DescriptionEn" xml:space="preserve">
    <value>Description (en)</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="Discontinued" xml:space="preserve">
    <value>Discontinued</value>
  </data>
  <data name="Discount" xml:space="preserve">
    <value>Discount</value>
  </data>
  <data name="DontCreateOrder" xml:space="preserve">
    <value>You don't create order</value>
  </data>
  <data name="Download" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="EmptyOrder" xml:space="preserve">
    <value>Empty order</value>
  </data>
  <data name="EndDate" xml:space="preserve">
    <value>End date</value>
  </data>
  <data name="ExpireDateValidation" xml:space="preserve">
    <value>Expected date is: 09/2018</value>
  </data>
  <data name="Fifty" xml:space="preserve">
    <value>50</value>
  </data>
  <data name="Filter" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="Find" xml:space="preserve">
    <value>Find</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>from</value>
  </data>
  <data name="Game" xml:space="preserve">
    <value>Game</value>
  </data>
  <data name="GameCountTitle" xml:space="preserve">
    <value>Games in store</value>
  </data>
  <data name="GameFilterViewModel_NameError" xml:space="preserve">
    <value>Name must contain 3 or more symbols</value>
  </data>
  <data name="GameName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="GamesTitle" xml:space="preserve">
    <value>Games</value>
  </data>
  <data name="Genres" xml:space="preserve">
    <value>Genres</value>
  </data>
  <data name="GoToMain" xml:space="preserve">
    <value>Go to main</value>
  </data>
  <data name="History" xml:space="preserve">
    <value>History</value>
  </data>
  <data name="Icon" xml:space="preserve">
    <value>Icon</value>
  </data>
  <data name="Key" xml:space="preserve">
    <value>Key</value>
  </data>
  <data name="LastMonth" xml:space="preserve">
    <value>Last Month</value>
  </data>
  <data name="LastWeek" xml:space="preserve">
    <value>Last Week</value>
  </data>
  <data name="LastYear" xml:space="preserve">
    <value>Last Year</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>loading.gif</value>
  </data>
  <data name="MakeOrder" xml:space="preserve">
    <value>Make order</value>
  </data>
  <data name="MostCommented" xml:space="preserve">
    <value>Most Commented</value>
  </data>
  <data name="MostViewed" xml:space="preserve">
    <value>Most Viewed</value>
  </data>
  <data name="NewFirst" xml:space="preserve">
    <value>New First</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="NumberSymbol" xml:space="preserve">
    <value>#</value>
  </data>
  <data name="OneDay" xml:space="preserve">
    <value>1 day</value>
  </data>
  <data name="OneHour" xml:space="preserve">
    <value>One hour</value>
  </data>
  <data name="OneHundred" xml:space="preserve">
    <value>100</value>
  </data>
  <data name="OneMonth" xml:space="preserve">
    <value>1 month</value>
  </data>
  <data name="OneWeek" xml:space="preserve">
    <value>1 week</value>
  </data>
  <data name="Order" xml:space="preserve">
    <value>Order</value>
  </data>
  <data name="OrderDetails" xml:space="preserve">
    <value>Order details</value>
  </data>
  <data name="OrderTitle" xml:space="preserve">
    <value>Order by</value>
  </data>
  <data name="PageSize" xml:space="preserve">
    <value>Size of page</value>
  </data>
  <data name="Pay" xml:space="preserve">
    <value>Pay</value>
  </data>
  <data name="PaymentType" xml:space="preserve">
    <value>Payment type</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Телефон</value>
  </data>
  <data name="PlatformTypes" xml:space="preserve">
    <value>Platform types</value>
  </data>
  <data name="PreparePayment" xml:space="preserve">
    <value>Prepare payment</value>
  </data>
  <data name="Prev" xml:space="preserve">
    <value>Prev</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="PublishedDate" xml:space="preserve">
    <value>Published</value>
  </data>
  <data name="Publisher" xml:space="preserve">
    <value>Publisher</value>
  </data>
  <data name="Publishers" xml:space="preserve">
    <value>Publishers</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="Quote" xml:space="preserve">
    <value>Quote</value>
  </data>
  <data name="QuoteComment" xml:space="preserve">
    <value>Quote this comment</value>
  </data>
  <data name="RangeValidation" xml:space="preserve">
    <value>{0} must be between {1} and {2}</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="ReplyTo" xml:space="preserve">
    <value>Reply to</value>
  </data>
  <data name="Required" xml:space="preserve">
    <value>{0} field is required</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SeeBasket" xml:space="preserve">
    <value>See my basket</value>
  </data>
  <data name="SeeComments" xml:space="preserve">
    <value>See Comment</value>
  </data>
  <data name="SelectPayment" xml:space="preserve">
    <value>Use this payment</value>
  </data>
  <data name="StartDate" xml:space="preserve">
    <value>Start date</value>
  </data>
  <data name="SumOrder" xml:space="preserve">
    <value>Sum</value>
  </data>
  <data name="Ten" xml:space="preserve">
    <value>10</value>
  </data>
  <data name="ThreeYear" xml:space="preserve">
    <value>Three Year</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>to</value>
  </data>
  <data name="Twenty" xml:space="preserve">
    <value>20</value>
  </data>
  <data name="TwoYear" xml:space="preserve">
    <value>Two Year</value>
  </data>
  <data name="UnitsInStock" xml:space="preserve">
    <value>Units in stock</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="UrlValidation" xml:space="preserve">
    <value>You type invalid url address</value>
  </data>
  <data name="ViewedCount" xml:space="preserve">
    <value>Viewed count</value>
  </data>
  <data name="VisaName" xml:space="preserve">
    <value>Holder's name</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="DescriptionRu" xml:space="preserve">
    <value>Description (ru)</value>
  </data>
  <data name="HomePage" xml:space="preserve">
    <value>Home page</value>
  </data>
  <data name="FieldMustBeDate" xml:space="preserve">
    <value>The field {0} must be a date.</value>
  </data>
  <data name="FieldMustBeNumeric" xml:space="preserve">
    <value>The field {0} must be a number.</value>
  </data>
  <data name="MaxPrice" xml:space="preserve">
    <value>Max price</value>
  </data>
  <data name="MinPrice" xml:space="preserve">
    <value>Min price</value>
  </data>
  <data name="PropertyValueInvalid" xml:space="preserve">
    <value>The value '{0}' is not valid for {1}.</value>
  </data>
  <data name="PropertyValueRequired" xml:space="preserve">
    <value>A value is required.</value>
  </data>
  <data name="IsPersistent" xml:space="preserve">
    <value>Is persistent</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="LoginHeader" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Login_or_password_is_incorrect_or_users_is_banned" xml:space="preserve">
    <value>Login or password is incorrect or users is banned</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="Hello" xml:space="preserve">
    <value>Hello, </value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="ComparePasswordValidationError" xml:space="preserve">
    <value>Password do not match.</value>
  </data>
  <data name="RepeatePassword" xml:space="preserve">
    <value>Repeate password</value>
  </data>
  <data name="CreateNewUser" xml:space="preserve">
    <value>Create new user</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="MinPasswordLength" xml:space="preserve">
    <value>The password should be longer than 6 characters</value>
  </data>
  <data name="Roles" xml:space="preserve">
    <value>Roles</value>
  </data>
  <data name="Users" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="ManageAdmin" xml:space="preserve">
    <value>Admin manage</value>
  </data>
  <data name="AreYouSureToDelete" xml:space="preserve">
    <value>Are you sure you want to delete this?</value>
  </data>
  <data name="CreatedStatus" xml:space="preserve">
    <value>Created</value>
  </data>
  <data name="CreateNewPublisher" xml:space="preserve">
    <value>Create new publisher</value>
  </data>
  <data name="Orders" xml:space="preserve">
    <value>Orders</value>
  </data>
  <data name="OrderStatus" xml:space="preserve">
    <value>Order status</value>
  </data>
  <data name="PayedStatus" xml:space="preserve">
    <value>Payed</value>
  </data>
  <data name="Shipp" xml:space="preserve">
    <value>Shipp order</value>
  </data>
  <data name="ShippedDate" xml:space="preserve">
    <value>Shipped date</value>
  </data>
  <data name="ShippedStatus" xml:space="preserve">
    <value>Shipped</value>
  </data>
  <data name="YouAreBanned" xml:space="preserve">
    <value>You are banned. You cann't create comments</value>
  </data>
  <data name="GenreNameEn" xml:space="preserve">
    <value>Name (en)</value>
  </data>
  <data name="GenreNameRu" xml:space="preserve">
    <value>Name (ru)</value>
  </data>
  <data name="NotEnoughtMoney" xml:space="preserve">
    <value>Not enought money</value>
  </data>
  <data name="NotFound" xml:space="preserve">
    <value>Not found</value>
  </data>
  <data name="PaymentConfirmed" xml:space="preserve">
    <value>Payment created and сonfirmed</value>
  </data>
  <data name="PaymentCreated" xml:space="preserve">
    <value>Payment created</value>
  </data>
  <data name="PaymentError" xml:space="preserve">
    <value>Payment error</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="Careers" xml:space="preserve">
    <value>Careers</value>
  </data>
  <data name="CaseStudies" xml:space="preserve">
    <value>Case studies</value>
  </data>
  <data name="Newsroom" xml:space="preserve">
    <value>Newsroom</value>
  </data>
  <data name="Services" xml:space="preserve">
    <value>Services</value>
  </data>
  <data name="Shippers" xml:space="preserve">
    <value>Shippers</value>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>Submit</value>
  </data>
</root>